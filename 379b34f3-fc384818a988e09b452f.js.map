{"version":3,"file":"379b34f3-fc384818a988e09b452f.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./node_modules/@adobe/gatsby-theme-aio/src/components/Search/index.js"],"sourcesContent":["/**\n *  Copyright 2020 Adobe. All rights reserved.\n *  This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License. You may obtain a copy\n *  of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software distributed under\n *  the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n *  OF ANY KIND, either express or implied. See the License for the specific language\n *  governing permissions and limitations under the License.\n */\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { css } from '@emotion/react';\nimport { AnchorLink } from '../AnchorLink';\nimport {\n  Tabs,\n  Item as TabsItem,\n  Label as TabsItemLabel,\n  TabsIndicator,\n  positionIndicator,\n  animateIndicator\n} from '../Tabs';\nimport { Item as MenuItem, Menu } from '../Menu';\nimport { Popover } from '../Popover';\nimport PropTypes from 'prop-types';\nimport { MOBILE_SCREEN_WIDTH, DESKTOP_SCREEN_WIDTH, SIDENAV_WIDTH, SEARCH_PARAMS, isExternalLink } from '../../utils';\nimport classNames from 'classnames';\nimport '@spectrum-css/typography';\nimport '@spectrum-css/textfield';\nimport '@spectrum-css/search';\nimport '@spectrum-css/button';\nimport { Cross, Magnify } from '../Icons';\nimport { Checkbox } from '../Checkbox';\n\nconst SEARCH_INPUT_WIDTH = '688px';\nconst SEARCH_INDEX_ALL = 'all';\nconst SEARCH_KEYWORDS = 'keywords';\nconst SUGGESTION_MAX_RESULTS = 50;\nconst SEARCH_MAX_RESULTS = 100;\n\n// Replace any character in a given unicode range with its html entity equivalent\n// Source: https://stackoverflow.com/a/18750001\nconst encodeHTML = (html) =>\n  html\n    .replace(/[\\u00A0-\\u9999<>\\&]/g, (i) => '&#' + i.charCodeAt(0) + ';')\n    .replace(/&#60;mark&#62;/g, '<mark>')\n    .replace(/&#60;em&#62;/g, '<em>')\n    .replace(/&#60;\\/mark&#62;/g, '</mark>')\n    .replace(/&#60;\\/em&#62;/g, '</em>');\n\n// Used to update the url in the browser\nconst setQueryStringParameter = (name, value) => {\n  const params = new URLSearchParams(window.location.search);\n  params.set(name, value);\n  window.history.replaceState({}, '', `${window.location.pathname}?${params}`);\n};\n\nconst mapToIndexName = (searchIndex) => searchIndex.map((index) => Object.keys(index)[0]);\n\nconst searchSuggestions = async (algolia, query, searchIndex, indexAll) => {\n  const queries = [];\n  // By default use all indexes\n  if (Object.keys(searchIndex[0])[0] === SEARCH_INDEX_ALL) {\n    searchIndex = indexAll;\n  }\n  // Or prioritize searchIndex\n  else {\n    const searchIndexNames = mapToIndexName(searchIndex).filter((index) => index !== SEARCH_INDEX_ALL);\n    searchIndex = [...searchIndexNames, ...indexAll.filter((index) => !searchIndexNames.includes(index))];\n  }\n\n  searchIndex.forEach((indexName) => {\n    queries.push({\n      indexName,\n      query,\n      params: {\n        hitsPerPage: Math.ceil(SUGGESTION_MAX_RESULTS / searchIndex.length),\n        attributesToRetrieve: ['objectID', 'url', 'title', 'description']\n      }\n    });\n  });\n\n  return await algolia.multipleQueries(queries);\n};\n\nconst searchIndexes = async (algolia, query, selectedIndex, indexAll, keywords) => {\n  if (selectedIndex === 'all') {\n    selectedIndex = indexAll;\n  } else {\n    selectedIndex = [selectedIndex];\n  }\n\n  const queries = [];\n  selectedIndex.forEach((indexName) => {\n    queries.push({\n      indexName,\n      query,\n      params: {\n        facets: [SEARCH_KEYWORDS],\n        attributesToRetrieve: ['objectID', 'url'],\n        hitsPerPage: Math.ceil(SEARCH_MAX_RESULTS / selectedIndex.length),\n        filters: keywords.map((keyword) => `${SEARCH_KEYWORDS}:\"${keyword}\"`).join(' AND ')\n      }\n    });\n  });\n\n  return await algolia.multipleQueries(queries);\n};\n\nconst mapSearchResults = (hits, results) => {\n  hits.forEach(({ objectID, url, _highlightResult }) => {\n    // TODO corrupted record url check\n    if (!isExternalLink(url)) {\n      // Verify url is unique\n      if (!results.find((result) => result.url === url)) {\n        results.push({\n          objectID,\n          url,\n          _highlightResult\n        });\n      }\n    }\n  });\n};\n\nconst mapKeywordResults = (facets, results) => {\n  if (facets[SEARCH_KEYWORDS]) {\n    Object.keys(facets[SEARCH_KEYWORDS]).forEach((keyword) => {\n      const found = results.find((result) => Object.keys(result)[0] === keyword);\n      if (found) {\n        // Increase keyword count\n        found[keyword] += facets[SEARCH_KEYWORDS][keyword];\n      } else {\n        results.push({ [keyword]: facets[SEARCH_KEYWORDS][keyword] });\n      }\n    });\n  }\n};\n\nconst Search = ({ algolia, searchIndex, indexAll, showSearch, setShowSearch, searchButtonId, isIFramed }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedIndex, setSelectedIndex] = useState(mapToIndexName(searchIndex)[0]);\n  const [selectedKeywords, setSelectedKeywords] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n  const [showClear, setShowClear] = useState(false);\n  const searchRef = useRef(null);\n  const suggestionsRef = useRef(null);\n  const inputRef = useRef(null);\n  const searchResultsRef = useRef(null);\n  const [searchSuggestionResults, setSearchSuggestionResults] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [keywordResults, setKeywordResults] = useState([]);\n  const [isSuggestionsOpen, setIsSuggestionsOpen] = useState(false);\n  const [triggerSearch, setTriggerSearch] = useState(false);\n  const selectedTabIndicator = useRef(null);\n  // Don't animate the tab indicator by default\n  const [isAnimated, setIsAnimated] = useState(false);\n\n  const getSelectedTabIndex = () => searchIndex[mapToIndexName(searchIndex).indexOf(selectedIndex)].tabRef;\n\n  const positionSelectedTabIndicator = (selectedTab = getSelectedTabIndex()) => {\n    if (showSearchResults && selectedTab?.current) {\n      animateIndicator(selectedTabIndicator, isAnimated);\n      positionIndicator(selectedTabIndicator, selectedTab);\n    }\n  };\n\n  const setTargetOrigin = () => {\n    const parentURL = document.referrer;\n\n    if (parentURL.indexOf('localhost') >= 0 || parentURL.indexOf('developer-stage.adobe') >= 0 || parentURL.indexOf('hlx.page') >= 0 || parentURL.indexOf('hlx.live') >= 0 || parentURL.indexOf('developer.adobe') >= 0) {\n      return parentURL;\n    } else {\n      return false;\n    }\n  };\n\n  const search = async () => {\n    if (searchQuery.length) {\n      setIsSuggestionsOpen(false);\n      setQueryStringParameter(SEARCH_PARAMS.query, searchQuery);\n      setQueryStringParameter(SEARCH_PARAMS.keywords, selectedKeywords);\n      setQueryStringParameter(SEARCH_PARAMS.index, selectedIndex);\n\n      if (isIFramed) {\n        const message = JSON.stringify({ 'query': searchQuery, 'keywords': selectedKeywords, 'index': selectedIndex });\n        const targetOrigin = setTargetOrigin();\n        if (targetOrigin) {\n          parent.postMessage(message, targetOrigin);\n        }\n      }\n\n      positionSelectedTabIndicator();\n      setShowSearchResults(true);\n\n      const search = await searchIndexes(algolia, searchQuery, selectedIndex, indexAll, selectedKeywords);\n\n      const mappedSearchResults = [];\n      const mappedKeywordResults = [];\n\n      if (search?.results?.length) {\n        search.results.forEach(({ hits, facets }) => {\n          mapSearchResults(hits, mappedSearchResults);\n          mapKeywordResults(facets, mappedKeywordResults);\n        });\n      }\n\n      setSearchResults(mappedSearchResults);\n      setKeywordResults(mappedKeywordResults);\n    }\n\n  };\n\n  useEffect(() => {\n    if (showSearch) {\n      // Read search params\n      const searchParams = new URL(window.location).searchParams;\n      const query = searchParams.get(SEARCH_PARAMS.query);\n      const keywords = searchParams.get(SEARCH_PARAMS.keywords);\n      const index = searchParams.get(SEARCH_PARAMS.index);\n\n      if (index) {\n        setSelectedIndex(index);\n      }\n\n      if (keywords) {\n        setSelectedKeywords(keywords.split(','));\n      }\n\n      if (query?.length) {\n        setSearchQuery(query);\n        setShowClear(true);\n\n        setTriggerSearch(true);\n      }\n\n      // Autofocus\n      if (inputRef?.current) {\n        inputRef.current.focus();\n      }\n    }\n  }, [showSearch]);\n\n  useEffect(() => {\n    search();\n  }, [selectedIndex, selectedKeywords]);\n\n  useEffect(() => {\n    if (triggerSearch) {\n      setTriggerSearch(false);\n      search();\n    }\n  }, [triggerSearch, setTriggerSearch]);\n\n  useEffect(() => {\n    if (searchResultsRef?.current) {\n      searchResultsRef.current.scrollTop = 0;\n    }\n  }, [searchResults]);\n\n  useEffect(() => {\n    if (showSearchResults) {\n      positionSelectedTabIndicator();\n\n      setIsAnimated(true);\n    } else {\n      setIsAnimated(false);\n    }\n  }, [showSearchResults]);\n\n  useEffect(() => {\n    const onClick = ({ target }) => {\n      setIsSuggestionsOpen(false);\n\n      if (searchRef.current && !searchRef.current.contains(target) && target.id !== searchButtonId) {\n        setShowSearch(false);\n      }\n    };\n\n    document.addEventListener('click', onClick, true);\n    return () => {\n      document.removeEventListener('click', onClick, true);\n    };\n  }, [setIsSuggestionsOpen, showSearchResults, setShowSearch, searchRef]);\n\n  useEffect(() => {\n    const onEscape = ({ key }) => {\n      if (key === 'Escape') {\n        setShowSearch(false);\n      }\n    };\n\n    document.addEventListener('keydown', onEscape);\n    return () => {\n      document.removeEventListener('keydown', onEscape);\n    };\n  }, [setShowSearch]);\n\n  if (isIFramed) {\n    useEffect(() => {\n      if (suggestionsRef) {\n        if (searchSuggestionResults.length > 0) {\n          suggestionsRef.current.querySelectorAll(\"a\").forEach(link => {\n            link.target = \"_top\";\n          });\n        }\n      }\n    }, [searchSuggestionResults])\n\n    useEffect(() => {\n      if (searchResultsRef) {\n        if (searchResults.length > 0) {\n          searchResultsRef.current.querySelectorAll(\"a\").forEach(link => {\n            link.target = \"_top\";\n          });\n        }\n      }\n    }, [searchResults])\n  }\n\n  return (\n    <>\n      <div\n        ref={searchRef}\n        css={css`\n          position: fixed;\n          top: ${isIFramed ? \"0\" : \"var(--spectrum-global-dimension-size-800)\"};\n          left: 0;\n          right: 0;\n          ${showSearchResults && 'bottom: 0;'}\n          background-color: var(--spectrum-global-color-static-white);\n          z-index: 10;\n\n          @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n            top: var(--spectrum-global-dimension-size-1200);\n          }\n        `}>\n        <div\n          css={css`\n            position: relative;\n            margin: var(--spectrum-global-dimension-size-400) auto;\n            max-width: ${SEARCH_INPUT_WIDTH};\n\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              max-width: calc(100vw - var(--spectrum-global-dimension-size-800));\n            }\n          `}>\n          <form\n            css={css`\n              width: 100%;\n            `}\n            className=\"spectrum-Search\"\n            onSubmit={async (event) => {\n              event.preventDefault();\n\n              await search();\n            }}>\n            <div\n              className={classNames('spectrum-Textfield', { 'is-focused': isFocused })}\n              css={css`\n                min-width: auto;\n                width: 100%;\n              `}>\n              <Magnify className=\"spectrum-Textfield-icon\" />\n              <input\n                ref={inputRef}\n                value={searchQuery}\n                onFocus={() => {\n                  setIsFocused(true);\n                }}\n                onBlur={() => {\n                  setIsFocused(false);\n                }}\n                onKeyDown={({ key }) => {\n                  if (suggestionsRef?.current) {\n                    if (key === 'ArrowDown') {\n                      suggestionsRef.current.querySelector('[tabindex=\"0\"]').focus();\n                    } else if (key === 'ArrowUp') {\n                      suggestionsRef.current.querySelector('[tabindex=\"0\"]:last-of-type').focus();\n                    }\n                  }\n                }}\n                onChange={async (e) => {\n                  const query = e.target.value;\n                  setSearchQuery(query);\n\n                  if (query.length && !searchResults.length) {\n                    setShowClear(true);\n\n                    const suggestions = await searchSuggestions(algolia, query, searchIndex, indexAll);\n\n                    if (suggestions?.results?.length) {\n                      const results = [];\n                      suggestions.results.forEach(({ hits }) => {\n                        mapSearchResults(hits, results);\n                      });\n                      setSearchSuggestionResults(results);\n\n                      if (!searchResults.length) {\n                        setShowSearchResults(false);\n                      }\n                    } else {\n                      setSearchSuggestionResults([]);\n                    }\n\n                    setIsSuggestionsOpen(true);\n                  } else {\n                    setShowClear(false);\n                    setIsSuggestionsOpen(false);\n                  }\n                }}\n                aria-label=\"Search\"\n                type=\"search\"\n                placeholder=\"Search\"\n                className=\"spectrum-Textfield-input spectrum-Search-input\"\n                autoComplete=\"off\"\n              />\n            </div>\n            {showClear && (\n              <button\n                css={css`\n                  position: absolute;\n                `}\n                tabIndex=\"-1\"\n                aria-label=\"Clear Search\"\n                type=\"reset\"\n                className=\"spectrum-ClearButton spectrum-Search-clearButton\"\n                onClick={() => {\n                  setSearchQuery('');\n                  inputRef.current.focus();\n                }}>\n                <Cross />\n              </button>\n            )}\n          </form>\n\n          <Popover\n            isOpen={isSuggestionsOpen}\n            css={css`\n              position: absolute;\n              top: var(--spectrum-global-dimension-size-400);\n              width: ${SEARCH_INPUT_WIDTH};\n\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                max-width: calc(100vw - var(--spectrum-global-dimension-size-800));\n              }\n            `}>\n            {searchSuggestionResults.length > 0 ? (\n              <Menu\n                ref={suggestionsRef}\n                onKeyDown={({ key }) => {\n                  if (suggestionsRef?.current && suggestionsRef.current.contains(document.activeElement)) {\n                    if (key === 'ArrowDown') {\n                      const nextSibling = document.activeElement.nextElementSibling;\n                      if (nextSibling) {\n                        nextSibling.focus();\n                      } else {\n                        suggestionsRef.current.querySelector('[tabindex=\"0\"]').focus();\n                      }\n                    } else if (key === 'ArrowUp') {\n                      const previousSibling = document.activeElement.previousElementSibling;\n                      if (previousSibling) {\n                        previousSibling.focus();\n                      } else {\n                        suggestionsRef.current.querySelector('[tabindex=\"0\"]:last-of-type').focus();\n                      }\n                    }\n                  }\n                }}>\n                {searchSuggestionResults.map((searchSuggestion) => {\n                  const to = `${location.origin}${searchSuggestion.url}`;\n\n                  return (\n                    <MenuItem key={searchSuggestion.objectID} href={to}>\n                      <div\n                        css={css`\n                          mark,\n                          em {\n                            background-color: transparent;\n                            color: inherit;\n                            font-weight: inherit;\n                            font-style: inherit;\n                            text-decoration: underline;\n                          }\n                        `}>\n                        <strong\n                          dangerouslySetInnerHTML={{\n                            __html: encodeHTML(searchSuggestion._highlightResult.title.value)\n                          }}\n                        />\n\n                        <div\n                          css={css`\n                            font-style: italic;\n                            margin: var(--spectrum-global-dimension-size-50) 0;\n                          `}>\n                          {to}\n                        </div>\n\n                        <div\n                          dangerouslySetInnerHTML={{\n                            __html: encodeHTML(searchSuggestion._highlightResult.content.value)\n                          }}\n                        />\n                      </div>\n                    </MenuItem>\n                  );\n                })}\n              </Menu>\n            ) : (\n              <div\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-800);\n                  margin-bottom: var(--spectrum-global-dimension-size-800);\n                `}>\n                <div\n                  css={css`\n                    display: flex;\n                    flex-direction: column;\n                    align-items: center;\n                    justify-content: center;\n                  `}>\n                  <h4\n                    className=\"spectrum-Heading spectrum-Heading--sizeS\"\n                    css={css`\n                      margin-bottom: var(--spectrum-global-dimension-size-100);\n                    `}>\n                    No Results Found\n                  </h4>\n                  <em>Try another search term</em>\n                </div>\n              </div>\n            )}\n          </Popover>\n        </div>\n\n        {showSearchResults && (\n          <div\n            css={css`\n              display: flex;\n              max-width: ${DESKTOP_SCREEN_WIDTH};\n              margin: auto;\n              height: 100%;\n\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                overflow: auto;\n                flex-wrap: wrap;\n              }\n            `}>\n            <div\n              css={css`\n                display: flex;\n                align-items: flex-start;\n                flex-direction: column;\n                box-sizing: border-box;\n                padding: var(--spectrum-global-dimension-size-200);\n                min-width: ${SIDENAV_WIDTH};\n              `}>\n              <h4\n                className=\"spectrum-Heading spectrum-Heading--sizeXS\"\n                css={css`\n                  margin-bottom: var(--spectrum-global-dimension-size-100);\n                `}>\n                Filter by\n              </h4>\n\n              <div\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-100);\n                  margin-bottom: var(--spectrum-global-dimension-size-1200);\n                  display: flex;\n                  flex-direction: column;\n                  overflow: auto;\n\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    margin-bottom: 0;\n                  }\n                `}>\n                {keywordResults.length > 0 ? (\n                  keywordResults.map((keywordResult, i) => {\n                    const keyword = Object.keys(keywordResult)[0];\n\n                    return (\n                      <Checkbox\n                        key={i}\n                        isSelected={selectedKeywords.includes(keyword)}\n                        value={keyword}\n                        onChange={(checked) => {\n                          if (checked) {\n                            setSelectedKeywords((selectedKeywords) => [...selectedKeywords, keyword]);\n                          } else {\n                            setSelectedKeywords(\n                              selectedKeywords.filter((selectedKeyword) => selectedKeyword !== keyword)\n                            );\n                          }\n                        }}>\n                        <span>{keyword}</span>\n                        <em>&nbsp;({keywordResult[keyword]})</em>\n                      </Checkbox>\n                    );\n                  })\n                ) : (\n                  <div className=\"spectrum-Body spectrum-Body--sizeS\">No filter options available</div>\n                )}\n              </div>\n            </div>\n\n            <div\n              css={css`\n                height: 100%;\n              `}>\n              <Tabs\n                onFontsReady={() => {\n                  positionSelectedTabIndicator();\n                }}>\n                {searchIndex.map((index, i) => {\n                  const indexName = Object.keys(index)[0];\n                  const indexLabel = index[indexName];\n\n                  const setTabRef = (element) => {\n                    index.tabRef = { current: element };\n                  };\n\n                  return (\n                    <TabsItem\n                      key={i}\n                      ref={setTabRef}\n                      selected={selectedIndex === indexName}\n                      tabIndex={0}\n                      onClick={async () => {\n                        setSelectedKeywords([]);\n                        setSelectedIndex(indexName);\n                      }}>\n                      <TabsItemLabel>{indexLabel}</TabsItemLabel>\n                    </TabsItem>\n                  );\n                })}\n\n                <TabsIndicator ref={selectedTabIndicator} />\n              </Tabs>\n\n              {searchResults.length > 0 ? (\n                <div\n                  ref={searchResultsRef}\n                  css={css`\n                    height: calc(\n                      100% - var(--spectrum-global-dimension-size-800) - var(--spectrum-global-dimension-size-800) -\n                        var(--spectrum-global-dimension-size-200)\n                    );\n                    overflow: auto;\n\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      height: auto;\n                      overflow: inherit;\n                    }\n                  `}>\n                  {searchResults.map((searchResult) => {\n                    const to = `${location.origin}${searchResult.url}`;\n\n                    return (\n                      <div\n                        css={css`\n                          margin: var(--spectrum-global-dimension-size-300);\n\n                          mark,\n                          em {\n                            background-color: transparent;\n                            color: inherit;\n                            font-weight: 700;\n                            font-style: inherit;\n                          }\n                        `}>\n                        <div\n                          className=\"spectrum-Body spectrum-Body--sizeM\"\n                          css={css`\n                            margin-bottom: var(--spectrum-global-dimension-size-100);\n                          `}>\n                          <AnchorLink to={to}>\n                            <span\n                              dangerouslySetInnerHTML={{\n                                __html: encodeHTML(searchResult._highlightResult.title.value)\n                              }}\n                            />\n                          </AnchorLink>\n                        </div>\n                        <div\n                          css={css`\n                            font-style: italic;\n                          `}>\n                          <AnchorLink variant=\"secondary\" to={to}>\n                            {to}\n                          </AnchorLink>\n                        </div>\n                        <div\n                          className=\"spectrum-Body spectrum-Body--sizeS\"\n                          css={css`\n                            margin: var(--spectrum-global-dimension-size-100) 0;\n                          `}\n                          dangerouslySetInnerHTML={{ __html: encodeHTML(searchResult._highlightResult.content.value) }}\n                        />\n                      </div>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div\n                  css={css`\n                    position: absolute;\n                    top: var(--spectrum-global-dimension-size-3600);\n                    height: calc(2 * var(--spectrum-global-dimension-size-1250));\n                    margin-top: calc(-1 * var(--spectrum-global-dimension-size-1250));\n                    text-align: center;\n                    right: 0;\n                    left: 0;\n                    padding: 0 var(--spectrum-global-dimension-size-200);\n\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      position: static;\n                      margin: var(--spectrum-global-dimension-size-800) 0;\n                      height: auto;\n                    }\n                  `}>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 104 90\"\n                    css={css`\n                      width: var(--spectrum-global-dimension-size-2400);\n                      height: var(--spectrum-global-dimension-size-1200);\n                      margin-bottom: var(--spectrum-global-dimension-size-300);\n                      fill: var(--spectrum-global-color-static-gray-500);\n                    `}>\n                    <g>\n                      <g>\n                        <path d=\"M37.5,69A24.54,24.54,0,1,0,17,57.92l0,0L1.46,73.52A5,5,0,0,0,5,82.05H5a5,5,0,0,0,3.54-1.47L24.06,65l0,0A24.33,24.33,0,0,0,37.5,69Zm0-46A21.5,21.5,0,1,1,16,44.5,21.52,21.52,0,0,1,37.5,23ZM6.41,78.46A2,2,0,0,1,5,79.05H5a2,2,0,0,1-1.42-3.42L18.83,60.34a25.21,25.21,0,0,0,2.83,2.83Z\"></path>\n                        <path d=\"M28.67,53.33a1.51,1.51,0,0,0,1.06.44,1.49,1.49,0,0,0,1.06-.44l6.71-6.71,6.71,6.71a1.5,1.5,0,0,0,2.12,0,1.49,1.49,0,0,0,0-2.12L39.62,44.5l6.71-6.71a1.49,1.49,0,0,0,0-2.12,1.51,1.51,0,0,0-2.12,0L37.5,42.38l-6.71-6.71a1.5,1.5,0,0,0-2.12,2.12l6.71,6.71-6.71,6.71A1.51,1.51,0,0,0,28.67,53.33Z\"></path>\n                        <path d=\"M102.5,31a1.5,1.5,0,0,0-1.5,1.5V86.17a.83.83,0,0,1-.83.83H38.83a.83.83,0,0,1-.83-.83V73.5a1.5,1.5,0,0,0-3,0V86.17A3.84,3.84,0,0,0,38.83,90h61.34A3.84,3.84,0,0,0,104,86.17V32.5A1.5,1.5,0,0,0,102.5,31Z\"></path>\n                        <path d=\"M37.5,17A1.5,1.5,0,0,0,39,15.5V3.83A.83.83,0,0,1,39.83,3H75V26.5A1.5,1.5,0,0,0,76.5,28h25.55a1.5,1.5,0,0,0,1-2.57L77.55.43a1.43,1.43,0,0,0-.49-.32A1.41,1.41,0,0,0,76.52,0H39.83A3.84,3.84,0,0,0,36,3.83V15.5A1.5,1.5,0,0,0,37.5,17ZM78,5.07,98.37,25H78Z\"></path>\n                      </g>\n                    </g>\n                  </svg>\n                  <h3 className=\"spectrum-Heading spectrum-Heading--light spectrum-Heading--sizeM\">\n                    Sorry, we couldn't find any results for <strong>{searchQuery}</strong>\n                  </h3>\n                  <p\n                    className=\"spectrum-Body spectrum-Body--S\"\n                    css={css`\n                      margin-top: var(--spectrum-global-dimension-size-100);\n                    `}>\n                    Make sure all the words are spelled correctly or try to refine your keywords.\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {!showSearchResults && (\n        <div\n          css={css`\n            position: fixed;\n            z-index: 1;\n            top: ${isIFramed ? \"var(--spectrum-global-dimension-size-800)\" : \"calc(var(--spectrum-global-dimension-size-1200) + var(--spectrum-global-dimension-size-800))\"};\n            bottom: 0;\n            left: 0;\n            right: 0;\n            background-color: rgba(0, 0, 0, 0.4);\n            pointer-events: none;\n          `}\n        />\n      )}\n    </>\n  );\n};\n\nSearch.propTypes = {\n  algolia: PropTypes.object,\n  searchIndex: PropTypes.array,\n  indexAll: PropTypes.array,\n  showSearch: PropTypes.bool,\n  setShowSearch: PropTypes.func,\n  searchButtonId: PropTypes.string\n};\n\nexport { Search };\n"],"names":["SEARCH_INPUT_WIDTH","SEARCH_KEYWORDS","encodeHTML","html","replace","i","charCodeAt","setQueryStringParameter","name","value","params","URLSearchParams","window","location","search","set","history","replaceState","pathname","mapToIndexName","searchIndex","map","index","Object","keys","searchSuggestions","algolia","query","indexAll","queries","searchIndexNames","filter","includes","forEach","indexName","push","hitsPerPage","Math","ceil","length","attributesToRetrieve","multipleQueries","searchIndexes","selectedIndex","keywords","facets","filters","keyword","join","mapSearchResults","hits","results","objectID","url","_highlightResult","isExternalLink","find","result","mapKeywordResults","found","Search","showSearch","setShowSearch","searchButtonId","isIFramed","useState","searchQuery","setSearchQuery","setSelectedIndex","selectedKeywords","setSelectedKeywords","showSearchResults","setShowSearchResults","isFocused","setIsFocused","showClear","setShowClear","searchRef","useRef","suggestionsRef","inputRef","searchResultsRef","searchSuggestionResults","setSearchSuggestionResults","searchResults","setSearchResults","keywordResults","setKeywordResults","isSuggestionsOpen","setIsSuggestionsOpen","triggerSearch","setTriggerSearch","selectedTabIndicator","isAnimated","setIsAnimated","positionSelectedTabIndicator","selectedTab","indexOf","tabRef","current","animateIndicator","positionIndicator","SEARCH_PARAMS","message","JSON","stringify","parentURL","document","referrer","targetOrigin","parent","postMessage","mappedSearchResults","mappedKeywordResults","useEffect","searchParams","URL","get","split","focus","scrollTop","onClick","target","contains","id","addEventListener","removeEventListener","onEscape","key","querySelectorAll","link","ref","css","MOBILE_SCREEN_WIDTH","className","onSubmit","event","preventDefault","classNames","Magnify","onFocus","onBlur","onKeyDown","querySelector","onChange","e","suggestions","type","placeholder","autoComplete","tabIndex","Cross","isOpen","activeElement","nextSibling","nextElementSibling","previousSibling","previousElementSibling","searchSuggestion","to","origin","href","dangerouslySetInnerHTML","__html","title","content","DESKTOP_SCREEN_WIDTH","SIDENAV_WIDTH","keywordResult","isSelected","checked","selectedKeyword","onFontsReady","indexLabel","element","selected","searchResult","variant","xmlns","viewBox","d"],"sourceRoot":""}