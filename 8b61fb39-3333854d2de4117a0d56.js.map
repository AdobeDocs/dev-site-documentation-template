{"version":3,"file":"8b61fb39-3333854d2de4117a0d56.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./node_modules/@adobe/gatsby-theme-aio/src/components/TextBlock/index.js"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, { cloneElement, useEffect, useState } from \"react\";\nimport { css } from \"@emotion/react\";\nimport { HeroButtons } from \"../Hero\";\nimport { Media } from \"../Media\";\nimport PropTypes from \"prop-types\";\nimport {\n  layoutColumns,\n  DESKTOP_SCREEN_WIDTH,\n  TABLET_SCREEN_WIDTH\n} from \"../../utils\";\nimport classNames from \"classnames\";\nimport \"@spectrum-css/typography\";\n\nconst counter = {\n  2: 0,\n  3: 0,\n  4: 0,\n};\n\nconst MIN_TABLET_SCREEN_WIDTH = '1023px'\nconst alignMapping = [\"margin-left: 0;\", \"margin-right: 0;\"];\n\nconst mediaCSS = css`\n    & {\n      display: inline;\n      width: ${layoutColumns(6)};\n      box-sizing: border-box;\n      padding: var(--spectrum-global-dimension-size-200);\n  \n      @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n        display: block;\n        width: 100%;\n      }\n    }\n  `;\n\nconst Icons = ({ icons, isCentered }) =>\n  icons\n    ? cloneElement(icons, {\n      css: css`\n            list-style: none;\n            padding: 0;\n            margin-bottom: var(--spectrum-global-dimension-size-400) !important;\n            display: flex;\n            justify-content: ${isCentered ? \"center\" : \"flex-start\"};\n  \n            & li {\n              display: flex;\n              border-right: 1px solid var(--spectrum-global-color-gray-300);\n              height: var(--spectrum-global-dimension-size-600);\n              margin-right: var(--spectrum-global-dimension-size-150);\n            }\n  \n            & li:last-of-type {\n              padding-right: 0;\n              border-right: none;\n            }\n  \n            .gatsby-resp-image-wrapper {\n              position: relative;\n              width: var(--spectrum-global-dimension-size-800) !important;\n              margin-left:0 !important;\n            }\n  \n            .gatsby-resp-image-image {\n              position: absolute;\n              top: 0;\n              left: 0;\n              height: 100%;\n              object-fit: contain;\n            }\n          `,\n    })\n    : null;\n\nconst Texts = ({ texts }) => {\n  const textKeys = Object.keys(texts).filter((key) => key.startsWith(\"text\"));\n  return textKeys.map((textKey) => texts[textKey]);\n};\n\nconst Links = ({ links, isCentered, isLinksGroups = false }) =>\n  links\n    ? cloneElement(links, {\n      css: css`\n            list-style: none;\n            padding: 0;\n            display: flex;\n            justify-content: ${isCentered ? \"center\" : \"flex-start\"};\n            ${!isLinksGroups ? \"\" : \"flex-wrap: wrap;\"}\n            margin-top: ${isCentered || isLinksGroups\n          ? \"var(--spectrum-global-dimension-size-200) !important;\"\n          : \"var(--spectrum-global-dimension-size-600) !important;\"};\n            & li {\n              display: flex;\n              align-items: center;\n              ${isLinksGroups\n          ? `border-radius: 10px; \n                  border:solid 1.8px;\n                  margin-right: var(--spectrum-global-dimension-size-200);\n                  height: var(--spectrum-global-dimension-size-300);\n                  margin-top: var(--spectrum-global-dimension-size-100);\n                  background-color: #F7F7F7;\n                  `\n          : \"height: var(--spectrum-global-dimension-size-400)\"};\n            }\n  \n            & li a {\n              white-space: nowrap;           \n              ${isLinksGroups\n          ? `margin: var(--spectrum-global-dimension-size-100); \n                color: currentColor;\n                text-decoration: none;\n                font-size: var(--spectrum-global-dimension-size-175);`\n          : \"margin-right: var(--spectrum-global-dimension-size-600);\"};\n            }\n  \n            & li:last-of-type a {\n              margin-right: ${isLinksGroups ? \"var(--spectrum-global-dimension-size-100)\" : \"0\"}\n            }\n  \n            & li:hover{\n              ${isLinksGroups ?\n          `background-color: var(--spectrum-button-primary-m-background-color-hover, var(--spectrum-global-color-gray-800));\n              border-color: var(--spectrum-button-primary-m-border-color-hover, var(--spectrum-global-color-gray-800));            color: var(--spectrum-button-primary-m-text-color-hover, var(--spectrum-global-color-gray-50));`\n          : \"\"}\n            }        \n            & li:hover a{\n              ${isLinksGroups ? `\n              color: var(--spectrum-button-primary-m-text-color-hover, var(--spectrum-global-color-gray-50));\n              text-decoration: none;`\n          : \"\"}\n            }\n  \n            .gatsby-resp-image-wrapper {\n              max-width: none !important;\n              width: 100% !important;\n              height: 100% !important;\n            }\n  \n            .gatsby-resp-image-wrapper {\n              width: var(--spectrum-global-dimension-size-400) !important;\n              margin-left: 0 !important;\n              margin-right: var(--spectrum-global-dimension-size-150) !important;\n            }\n  \n            .gatsby-resp-image-image {\n              object-fit: contain;\n            }\n            \n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              flex-direction: ${isLinksGroups ? \"initial\" : \"column\"};\n              align-items: ${isCentered ? \"center\" : \"left\"};          \n  \n              li {\n                margin-top: var(--spectrum-global-dimension-size-100);              \n              }\n  \n              li a {\n                ${isLinksGroups\n          ? \"font-size: var(--spectrum-global-dimension-size-130);` \"\n          : `margin-right: 0;`\n        }\n              }\n            }\n  \n            @media screen and (max-width: 767px) {\n              ${isLinksGroups ? `width: min-content` : \"\"}\n            }\n          `,\n    })\n    : null;\n\nconst TextBlock = ({\n  className,\n  heading,\n  subHeading,\n  links,\n  buttons,\n  linksGroups,\n  icons,\n  image,\n  assetImg,\n  video,\n  theme = \"lightest\",\n  width = \"100%\",\n  isCentered = false,\n  primaryOutline = false,\n  headerElementType = \"h3\",\n  imageOnly = false,\n  imgWidth = \"50%\",\n  isPrimaryBtn = false,\n  variantsTypePrimary = 'accent',\n  variantsTypeSecondary = 'secondary',\n  variantStyleFill = \"fill\",\n  variantStyleOutline = \"outline\",\n  hasCodeBlock = false,\n  videoUrl,\n  position = \"left\",\n  homeZigZag = false,\n  isbuttonGroups = false,\n  ...props\n}) => {\n  const Element = headerElementType;\n\n  let initColumns = 100 / parseFloat(width);\n\n  if (width === \"33%\") {\n    width = `${(100 / 3).toFixed(2)}%`;\n    initColumns = 3;\n  }\n\n  const [columns] = useState(initColumns);\n\n  useEffect(() => {\n    return () => {\n      if (typeof counter[columns] !== \"undefined\") {\n        counter[columns]--;\n      }\n    };\n  }, [columns]);\n\n  if (width !== \"100%\") {\n    isCentered = true;\n  }\n\n  if (isCentered) {\n    let blockWidth = \"\";\n    let extraMargin = \"\";\n\n    if (typeof counter[columns] !== \"undefined\") {\n      counter[columns]++;\n    }\n\n    if (columns === 1) {\n      blockWidth = `max-width: ${layoutColumns(6)};`;\n    } else if (columns > 3) {\n      blockWidth = \"max-width: var(--spectrum-global-dimension-size-3600);\";\n    } else {\n      blockWidth = \"max-width: var(--spectrum-global-dimension-size-4600);\";\n      extraMargin = alignMapping[counter[columns] % columns];\n    }\n    return (\n      <>\n        <section\n          className={classNames(className, `spectrum--${theme}`)}\n          css={css`\n              display: table-cell;\n              width: ${width.replace(\"%\", \"vw\")};\n              background: var(--spectrum-global-color-gray-100);\n              padding: var(--spectrum-global-dimension-size-1000) 0;\n  \n              @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                display: block;\n                width: 100%;\n              }\n            `}\n        >\n          <div\n            css={css`\n                ${blockWidth}\n                padding: 0 var(--spectrum-global-dimension-size-400);\n                margin: auto;\n                ${extraMargin}\n  \n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  max-width: none;\n                  margin: auto;\n                }\n              `}\n          >\n            <Icons icons={icons} isCentered={isCentered} />\n\n            {image &&\n              cloneElement(image, {\n                css: css`\n                    height: var(--spectrum-global-dimension-size-1000);\n                    margin-top: 0;\n                    margin-bottom: var(--spectrum-global-dimension-size-300);\n  \n                    .gatsby-resp-image-wrapper {\n                      position: relative;\n                      max-width: none !important;\n                      width: 100% !important;\n                      height: 100% !important;\n                    }\n  \n                    .gatsby-resp-image-image {\n                      position: absolute;\n                      top: 0;\n                      left: 0;\n                      height: 100%;\n                      object-fit: contain;\n                    }\n                  `,\n              })}\n            {assetImg &&\n              <div className={assetImg?.props?.children} />}\n\n            {heading && (\n              <Element\n                className=\"spectrum-Heading spectrum-Heading--sizeM\"\n                css={css`\n                    margin-bottom: var(\n                      --spectrum-global-dimension-size-200\n                    ) !important;\n  \n                    & ~ p {\n                      margin-top: 0;\n                      margin-bottom: 0 !important;\n                    }\n                  `}\n              >\n                {heading.props.children}\n              </Element>\n            )}\n            {subHeading && (\n              <h3\n                className=\"spectrum-Heading spectrum-Heading--sizeM\"\n                css={css`\n                    font-size: var(\n                      --spectrum-global-dimension-size-225\n                    ) !important;\n                    margin-bottom: var(\n                      --spectrum-global-dimension-size-200\n                    ) !important;\n  \n                    & ~ p {\n                      margin-top: 0;\n                      margin-bottom: 0 !important;\n                    }\n                  `}\n              >\n                {subHeading.props.children}\n              </h3>\n            )}\n\n            <Texts texts={props} />\n\n            <HeroButtons\n              buttons={buttons}\n              styles={[variantStyleFill, variantStyleOutline]}\n              variants={[variantsTypePrimary, variantsTypeSecondary]}\n              css={css`\n                  margin-top: var(--spectrum-global-dimension-size-150);\n                  margin-bottom: var(--spectrum-global-dimension-size-150);\n                  justify-content: center;\n                `}\n            />\n\n            <Links links={links} isCentered={isCentered} />\n\n            <Media css={mediaCSS} video={video} />\n\n            {videoUrl &&\n              <video loop=\"true\" muted=\"true\" autoPlay preload=\"metadata\" playsInline css={css`\n\t                            display: inline;\n\t                            width: ${layoutColumns(4)};\n\t                            box-sizing: border-box;\n\t                            padding: var(--spectrum-global-dimension-size-200);\n                        \n\t                            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n\t                              display: block;\n\t                              width: 100%;\n\t                            }\n\t                          }\n\t                            `}>\n                <source src={videoUrl} type=\"video/mp4\" />\n              </video>}\n\n          </div>\n        </section>\n        {width === \"100%\" ||\n          (typeof counter[columns] !== \"undefined\" &&\n            counter[columns] % columns === 0) ? (\n          <div aria-hidden=\"true\" />\n        ) : null}\n      </>\n    );\n  } else {\n    const isReversed =\n      props.slots.endsWith(\"image\") || props.slots.endsWith(\"video\");\n    return (\n      <section\n        className={classNames(className, `spectrum--${theme}`)}\n        css={css`\n            width: 100%;\n            background: var(--spectrum-global-color-gray-100);\n          `}\n      >\n        <div\n          css={css`\n              width: ${DESKTOP_SCREEN_WIDTH};\n              box-sizing: border-box;\n              margin: auto;\n              padding: var(--spectrum-global-dimension-size-1000) 0;\n  \n              @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                width: 100%;\n  \n                // & > div {\n                //   flex-direction: column !important;\n                // }\n              }\n            `}\n        >\n          <div\n            css={css`\n                display: flex;\n                align-items: center;\n                flex-direction: ${imageOnly\n                ? \"column\"\n                : position === \"right\"\n                  ? \"row-reverse\"\n                  : isReversed ? \"row-reverse\" : \"row\"};\n  \n                @media screen and (max-width: ${MIN_TABLET_SCREEN_WIDTH}) {\n                  flex-direction: column;\n                }\n              `}\n          >\n            {image &&\n              cloneElement(image, {\n                css: css`\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    width: ${imgWidth};\n                    // we need to modify the height\n                    // height: calc(\n                    //   var(--spectrum-global-dimension-size-4600) -\n                    //     var(--spectrum-global-dimension-size-225)\n                    // );\n                    box-sizing: border-box;\n                    padding: var(--spectrum-global-dimension-size-200);\n                    margin-top: 0;\n  \n                    .gatsby-resp-image-wrapper {\n                      max-width: none !important;\n                      width: 100% !important;\n                      height: 100% !important;\n                    }\n  \n                    .gatsby-resp-image-image {\n                      object-fit: contain;\n                    }\n  \n                    @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                      height: auto;\n                      width: 100%;\n                    }\n                  `,\n              })}\n            {assetImg &&\n              <div className={assetImg?.props?.children} />}\n\n            <Media css={mediaCSS} video={video} />\n\n            {videoUrl &&\n              <video loop=\"true\" muted=\"true\" autoPlay preload=\"metadata\" playsInline css={css`\n\t                            display: inline;\n\t                            width: ${layoutColumns(5)};\n\t                            box-sizing: border-box;\n\t                            padding: var(--spectrum-global-dimension-size-200);\n                        \n\t                            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n\t                              display: block;\n\t                              width: 100%;\n\t                            }\n\t                          }\n\t                            `}>\n                <source src={videoUrl} type=\"video/mp4\" />\n              </video>}\n\n            {!imageOnly && <div\n              css={css`\n                  ${hasCodeBlock ? `width: 70%;` : `width: 50%;`}\n                  display: flex;\n                  flex-direction: column;\n                  justify-content: center;\n                  text-align: left;\n                  box-sizing: border-box;\n                  padding: 0 var(--spectrum-global-dimension-size-400);\n  \n                  @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                    width: 100%;\n                    margin: var(--spectrum-global-dimension-size-400) 0;\n                  }\n                `}\n            >\n              <Icons icons={icons} isCentered={isCentered} />\n\n              {heading && (\n                <Element\n                  className=\"spectrum-Heading spectrum-Heading--sizeM\"\n                  css={css`\n                      margin-top: 0 !important;\n                      margin-bottom: var(\n                        --spectrum-global-dimension-size-200\n                      ) !important;\n  \n                      & + p {\n                        margin-top: 0 !important;\n                      }\n                    `}\n                >\n                  {heading.props.children}\n                </Element>\n              )}\n              {subHeading && !linksGroups && (\n                <h3\n                  className=\"spectrum-Heading spectrum-Heading--sizeM\"\n                  css={css`\n                  font-size: var(\n                    --spectrum-global-dimension-size-225\n                  ) !important;\n                    margin-bottom: var(\n                      --spectrum-global-dimension-size-200\n                    ) !important;\n  \n                    & ~ p {\n                      margin-top: 0;\n                      margin-bottom: 0 !important;\n                    }\n                  `}\n                >\n                  {subHeading.props.children}\n                </h3>\n              )}\n\n              <Texts texts={props} />\n\n              {subHeading && linksGroups && (\n                <h3\n                  className=\"spectrum-Heading spectrum-Heading--sizeM\"\n                  css={css`\n                    font-size: var(\n                      --spectrum-global-dimension-size-225\n                    ) !important;                  \n                    margin-top: var(\n                      --spectrum-global-dimension-size-200\n                    ) !important;\n  \n                    & ~ p {\n                      margin-top: 0;\n                      margin-bottom: 0 !important;\n                    }\n                  `}\n                >\n                  {subHeading.props.children}\n                </h3>\n              )}\n\n              {linksGroups && (\n                <Links links={linksGroups} isCentered={isCentered} isLinksGroups />\n              )}\n\n              <HeroButtons\n                buttons={buttons}\n                styles={[variantStyleFill, variantStyleOutline]}\n                variants={[variantsTypePrimary, variantsTypeSecondary]}\n                heading={homeZigZag ? heading?.props?.children : ''}\n                css={css`\n                    margin-top: var(--spectrum-global-dimension-size-200);\n                  `}\n              />\n\n              <Links links={links} isCentered={isCentered} />\n            </div>}\n          </div>\n        </div>\n      </section>\n    );\n  }\n};\n\nTextBlock.propTypes = {\n  heading: PropTypes.element,\n  links: PropTypes.element,\n  icons: PropTypes.element,\n  buttons: PropTypes.element,\n  linksGroups: PropTypes.element,\n  image: PropTypes.element,\n  video: PropTypes.element,\n  theme: PropTypes.string,\n  width: PropTypes.oneOf([\"100%\", \"50%\", \"33%\", \"25%\"]),\n  isCentered: PropTypes.bool,\n  headerElementType: PropTypes.oneOf([\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"]),\n  imageOnly: PropTypes.bool,\n  primaryOutline: PropTypes.bool,\n  hasCodeBlock: PropTypes.bool,\n  imgWidth: PropTypes.string,\n  homeZigZag: PropTypes.bool,\n  isbuttonGroups: PropTypes.bool,\n  position: PropTypes.string,\n  videoUrl: PropTypes.string,\n};\n\nexport { TextBlock };\n"],"names":["counter","alignMapping","mediaCSS","css","layoutColumns","TABLET_SCREEN_WIDTH","Icons","_ref10","icons","isCentered","cloneElement","Texts","_ref11","texts","Object","keys","filter","key","startsWith","map","textKey","Links","_ref12","links","_ref12$isLinksGroups","isLinksGroups","_ref","name","styles","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","TextBlock","_ref13","className","heading","subHeading","buttons","linksGroups","image","assetImg","video","_ref13$theme","theme","_ref13$width","width","_ref13$isCentered","_ref13$headerElementT","primaryOutline","headerElementType","_ref13$imageOnly","imageOnly","_ref13$imgWidth","imgWidth","_ref13$variantsTypePr","isPrimaryBtn","variantsTypePrimary","_ref13$variantsTypeSe","variantsTypeSecondary","_ref13$variantStyleFi","variantStyleFill","_ref13$variantStyleOu","variantStyleOutline","_ref13$hasCodeBlock","hasCodeBlock","videoUrl","_ref13$position","position","_ref13$homeZigZag","homeZigZag","props","isbuttonGroups","_objectWithoutPropertiesLoose","_excluded","Element","initColumns","parseFloat","toFixed","columns","useState","useEffect","_assetImg$props","blockWidth","extraMargin","___EmotionJSX","React","classNames","replace","children","HeroButtons","variants","Media","loop","muted","autoPlay","preload","playsInline","src","type","_assetImg$props2","_heading$props","isReversed","slots","endsWith","DESKTOP_SCREEN_WIDTH"],"sourceRoot":""}