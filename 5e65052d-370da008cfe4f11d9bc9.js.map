{"version":3,"file":"5e65052d-370da008cfe4f11d9bc9.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./node_modules/@adobe/gatsby-theme-aio/src/components/Hero/index.js"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, { cloneElement, Children, useContext } from 'react';\nimport { withPrefix } from 'gatsby';\nimport { css } from '@emotion/react';\nimport { AnchorButton } from '../AnchorButton';\nimport '@spectrum-css/typography';\nimport PropTypes from 'prop-types';\nimport {\n  getElementChild,\n  cloneChildren,\n  DESKTOP_SCREEN_WIDTH,\n  TABLET_SCREEN_WIDTH,\n  MOBILE_SCREEN_WIDTH,\n  DEFAULT_HOME,\n  findSelectedTopPage,\n  rootFixPages,\n  rootFix,\n  cleanRootFix,\n  findSelectedTopPageMenu\n} from '../../utils';\nimport Context from '../Context';\nimport { Breadcrumbs } from '../Breadcrumbs';\nimport classNames from 'classnames';\n\nconst setImageLoading = (child) => {\n  if (child?.props?.mdxType === 'img') {\n    return cloneElement(child, {\n      loading: 'eager'\n    });\n  }\n\n  return child;\n};\n\nconst HeroButtons = ({ buttons, variants = ['cta', 'primary'], quiets = [true, true], className }) =>\n  buttons ? (\n    <div>\n      <div\n        className={className}\n        css={css`\n          display: flex;\n          flex-wrap: wrap;\n          gap: var(--spectrum-global-dimension-size-200);\n        `}>\n        {Children.map(buttons.props.children, (item, i) => {\n          let variant = variants[0];\n          let quiet = quiets[0];\n\n          if (i > 0) {\n            variant = variants[1];\n            quiet = quiets[1];\n          }\n\n          const link = getElementChild(item);\n\n          return (\n            <div key={i}>\n              <AnchorButton isQuiet={quiet} href={link.props.href} variant={variant}>\n                {link.props.children}\n              </AnchorButton>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  ) : null;\n\nconst HeroImage = ({ image, styles }) =>\n  image\n    ? cloneElement(image, {\n        children: cloneChildren(image.props.children, setImageLoading),\n        css: css`\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          height: 100%;\n          width: 100%;\n          margin-top: 0;\n          ${styles}\n\n          .gatsby-resp-image-wrapper {\n            max-width: none !important;\n            width: 100% !important;\n            height: 100% !important;\n          }\n\n          .gatsby-resp-image-image {\n            object-fit: cover;\n          }\n        `\n      })\n    : null;\n\nconst HeroTexts = ({ texts }) => {\n  const textKeys = Object.keys(texts).filter((key) => key.startsWith('text'));\n  return textKeys.map((textKey) =>\n    cloneElement(texts[textKey], {\n      className: 'spectrum-Body spectrum-Body--sizeL',\n      css: css`\n        &.spectrum-Body--sizeL {\n          margin-top: 0 !important;\n\n          &:last-of-type {\n            margin-bottom: 0 !important;\n          }\n        }\n      `\n    })\n  );\n};\n\nconst HeroHeading = ({ heading, variant }) =>\n  heading\n    ? cloneElement(heading, {\n        className:\n          variant === 'default' ? 'spectrum-Heading--sizeXL' : 'spectrum-Heading--sizeXXL spectrum-Heading--serif',\n        css: css`\n          margin-top: 0;\n          margin-bottom: var(--spectrum-global-dimension-size-200);\n\n          & + p {\n            margin-bottom: var(--spectrum-global-dimension-size-200);\n          }\n        `\n      })\n    : null;\n\nconst Hero = ({\n  className,\n  background,\n  theme = 'dark',\n  heading,\n  image,\n  icon,\n  buttons,\n  variant = 'default',\n  width = DESKTOP_SCREEN_WIDTH,\n  ...props\n}) => {\n  const { siteMetadata, location } = useContext(Context);\n\n  if (!variant || variant === 'default') {\n    const { home, pages } = siteMetadata;\n    const pathWithRootFix = rootFix(location.pathname);\n    const pagesWithRootFix = rootFixPages(pages);\n    const selectedTopPage = findSelectedTopPage(pathWithRootFix, pagesWithRootFix);\n    const selectedTopPageMenu = findSelectedTopPageMenu(pathWithRootFix, selectedTopPage);\n\n    return (\n      <section\n        className={classNames(className, `spectrum--${theme}`)}\n        css={css`\n          position: relative;\n          height: var(--spectrum-global-dimension-size-3400);\n          margin-bottom: var(--spectrum-global-dimension-size-400);\n          background-color: ${background ?? 'rgb( 29, 125, 238)'};\n          width: 100%;\n          display: flex;\n\n          @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n            overflow: auto;\n          }\n\n          @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n            height: calc(100vh - var(--spectrum-global-dimension-size-1200));\n          }\n        `}>\n        <HeroImage image={image} styles={`position: absolute;`} />\n        <div\n          css={css`\n            margin: auto;\n            display: flex;\n            position: relative;\n            height: 100%;\n            max-width: ${width};\n            flex-direction: row;\n            width: 100%;\n            align-items: center;\n\n            & > p {\n              margin-top: 0 !important;\n            }\n          `}>\n          <div\n            css={css`\n              width: calc(5 * 100% / 12);\n              position: absolute;\n              display: flex;\n              flex-direction: column;\n\n              & > p {\n                margin-top: var(--spectrum-global-dimension-size-225) !important;\n                margin-bottom: 0 !important;\n              }\n\n              @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                width: auto;\n                padding: 0 var(--spectrum-global-dimension-size-400);\n              }\n            `}>\n            {home?.hidden !== true && home?.title && home?.href && selectedTopPage && (\n              <Breadcrumbs\n                pages={[\n                  DEFAULT_HOME,\n                  home,\n                  { ...selectedTopPage, href: withPrefix(cleanRootFix(selectedTopPage.href)) },\n                  selectedTopPageMenu && { ...selectedTopPageMenu, href: withPrefix(selectedTopPageMenu.href) }\n                ]}\n              />\n            )}\n\n            <HeroHeading heading={heading} variant={variant} />\n\n            <HeroTexts texts={props} />\n          </div>\n        </div>\n      </section>\n    );\n  } else {\n    const height = 'calc(var(--spectrum-global-dimension-size-6000) + var(--spectrum-global-dimension-size-250))';\n\n    if (variant === 'fullwidth') {\n      return (\n        <section\n          className={classNames(className, `spectrum--${theme}`)}\n          css={css`\n            position: relative;\n            width: 100%;\n            height: ${height};\n            background: ${background ?? 'var(--spectrum-global-color-gray-50)'};\n\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              overflow: auto;\n            }\n\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              height: 100vh;\n\n              .spectrum-Heading--sizeXXL {\n                font-size: var(--spectrum-alias-heading-xl-text-size);\n              }\n            }\n          `}>\n          <HeroImage image={image} />\n\n          <div\n            css={css`\n              height: 100%;\n              position: absolute;\n              top: 0;\n              width: 100%;\n              box-sizing: border-box;\n              padding: 0 calc(var(--spectrum-global-dimension-size-3600) + var(--spectrum-global-dimension-size-125));\n              display: flex;\n              flex-direction: column;\n              align-items: center;\n              justify-content: center;\n              text-align: center;\n\n              @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                padding: 0 var(--spectrum-global-dimension-size-400);\n              }\n            `}>\n            <HeroHeading heading={heading} variant={variant} />\n\n            <HeroTexts texts={props} />\n\n            <HeroButtons\n              buttons={buttons}\n              variants={['cta', 'overBackground']}\n              css={css`\n                margin-top: var(--spectrum-global-dimension-size-400);\n              `}\n            />\n          </div>\n        </section>\n      );\n    } else if (variant === 'halfwidth') {\n      return (\n        <section\n          className={classNames(className, `spectrum--lightest`)}\n          css={css`\n            background: ${background ?? 'var(--spectrum-global-color-gray-50)'};\n            width: 100%;\n            height: ${height};\n            overflow: hidden;\n\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              height: auto;\n              padding: var(--spectrum-global-dimension-size-400);\n              box-sizing: border-box;\n            }\n          `}>\n          <div\n            css={css`\n              display: flex;\n              height: 100%;\n              justify-content: center;\n            `}>\n            <div\n              css={css`\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                width: calc(5 * 100% / 12);\n                margin-left: var(--spectrum-global-dimension-size-800);\n                margin-right: var(--spectrum-global-dimension-size-400);\n\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  width: 100%;\n                  margin: 0;\n                }\n              `}>\n              {icon &&\n                cloneElement(icon, {\n                  children: cloneChildren(icon.props.children, setImageLoading),\n                  css: css`\n                    height: var(--spectrum-global-dimension-size-600);\n                    width: var(--spectrum-global-dimension-size-600);\n                    margin-top: 0 !important;\n                    margin-bottom: var(--spectrum-global-dimension-size-300) !important;\n\n                    .gatsby-resp-image-wrapper {\n                      max-width: none !important;\n                      width: 100% !important;\n                      height: 100% !important;\n                    }\n\n                    .gatsby-resp-image-image {\n                      height: 100%;\n                      object-fit: contain;\n                    }\n                  `\n                })}\n\n              <HeroHeading heading={heading} isVariant />\n\n              <HeroTexts texts={props} />\n\n              <HeroButtons\n                buttons={buttons}\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-400);\n                `}\n              />\n            </div>\n            <div\n              css={css`\n                flex: 1;\n\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  display: none;\n                }\n              `}>\n              <HeroImage image={image} />\n            </div>\n          </div>\n        </section>\n      );\n    }\n  }\n};\n\nHero.propTypes = {\n  background: PropTypes.string,\n  heading: PropTypes.element,\n  text: PropTypes.element,\n  image: PropTypes.element,\n  icon: PropTypes.element,\n  buttons: PropTypes.element,\n  variant: PropTypes.string,\n  width: PropTypes.string,\n  theme: PropTypes.string\n};\n\nHeroButtons.propTypes = {\n  buttons: PropTypes.element,\n  variants: PropTypes.array,\n  quiets: PropTypes.array\n};\n\nHeroImage.propTypes = {\n  image: PropTypes.element\n};\n\nexport { Hero, HeroImage, HeroButtons };\n"],"names":["setImageLoading","child","props","mdxType","cloneElement","loading","HeroButtons","buttons","variants","quiets","className","css","Children","children","item","i","variant","quiet","link","getElementChild","key","A","isQuiet","href","HeroImage","image","styles","cloneChildren","HeroTexts","texts","Object","keys","filter","startsWith","map","textKey","HeroHeading","heading","Hero","background","theme","icon","width","DESKTOP_SCREEN_WIDTH","useContext","Context","siteMetadata","location","home","pages","pathWithRootFix","rootFix","pathname","pagesWithRootFix","rootFixPages","selectedTopPage","findSelectedTopPage","selectedTopPageMenu","findSelectedTopPageMenu","classNames","MOBILE_SCREEN_WIDTH","hidden","title","DEFAULT_HOME","withPrefix","cleanRootFix","height","TABLET_SCREEN_WIDTH","isVariant"],"sourceRoot":""}