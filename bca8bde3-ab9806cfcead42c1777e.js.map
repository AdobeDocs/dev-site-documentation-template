{"version":3,"sources":["webpack://dev-site-documentation-template/./node_modules/@adobe/gatsby-theme-aio/src/components/GlobalHeader/index.js"],"names":["getSelectedTabIndex","location","pages","pathWithRootFix","rootFix","pathname","pagesWithRootFix","rootFixPages","selectedIndex","indexOf","findSelectedTopPage","GlobalHeader","ims","isLoadingIms","home","versions","docs","toggleSideNav","hasSideNav","useState","selectedTabIndex","setSelectedTabIndex","tabsRef","useRef","tabsContainerRef","selectedTabIndicatorRef","isAnimated","setIsAnimated","versionPopoverRef","profilePopoverRef","openVersion","setOpenVersion","openProfile","setOpenProfile","openMenuIndex","setOpenMenuIndex","profile","setProfile","isLoadingProfile","setIsLoadingProfile","versionPopoverId","nextId","profilePopoverId","hasHome","positionSelectedTabIndicator","index","selectedTab","tabRef","current","scrollLeft","offsetLeft","positionIndicator","useEffect","animateIndicator","isSignedInUser","getProfile","getBoundingClientRect","top","left","style","position","setTimeout","menuRef","forEach","page","onClick","event","length","contains","target","some","document","addEventListener","removeEventListener","onScroll","passive","role","css","aria-label","DESKTOP_SCREEN_WIDTH","isQuiet","TripleGripper","href","Adobe","className","variant","DEFAULT_HOME","getExternalLinkProps","title","ref","onFontsReady","elementType","GatsbyLink","to","map","i","isSelectedTab","menuPopoverId","setTabRef","element","Fragment","key","withPrefix","selected","aria-controls","stopImmediatePropagation","ChevronDown","id","menu","description","isOpen","k","open","find","version","isSelected","isHighlighted","A","process","GATSBY_IMS_SRC","GATSBY_IMS_CONFIG","size","hidden","signIn","alt","src","avatarUrl","userId","displayName","signOut"],"mappings":"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","file":"bca8bde3-ab9806cfcead42c1777e.js","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, { Fragment, useRef, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport nextId from 'react-id-generator';\nimport { withPrefix } from 'gatsby';\nimport { GatsbyLink } from '../GatsbyLink';\nimport {\n  findSelectedTopPage,\n  rootFix,\n  rootFixPages,\n  getExternalLinkProps,\n  DESKTOP_SCREEN_WIDTH,\n  DEFAULT_HOME\n} from '../../utils';\nimport { css } from '@emotion/react';\nimport { AnchorButton } from '../AnchorButton';\nimport { Button } from '../Button';\nimport { ProgressCircle } from '../ProgressCircle';\nimport { Adobe, ChevronDown, TripleGripper } from '../Icons';\nimport { ActionButton, Text as ActionButtonLabel } from '../ActionButton';\nimport { PickerButton } from '../Picker';\nimport { Menu, Item as MenuItem } from '../Menu';\nimport { Popover } from '../Popover';\nimport { Image } from '../Image';\nimport { Link } from '../Link';\nimport {\n  Tabs,\n  Item as TabsItem,\n  Label as TabsItemLabel,\n  TabsIndicator,\n  positionIndicator,\n  animateIndicator\n} from '../Tabs';\nimport '@spectrum-css/typography';\nimport '@spectrum-css/assetlist';\nimport { Divider } from '../Divider';\n\nconst getSelectedTabIndex = (location, pages) => {\n  const pathWithRootFix = rootFix(location.pathname);\n  const pagesWithRootFix = rootFixPages(pages);\n\n  let selectedIndex = pagesWithRootFix.indexOf(findSelectedTopPage(pathWithRootFix, pagesWithRootFix));\n\n  // Assume first item is selected\n  if (selectedIndex === -1) {\n    selectedIndex = 0;\n  }\n\n  return selectedIndex;\n};\n\nconst GlobalHeader = ({ ims, isLoadingIms, home, versions, pages, docs, location, toggleSideNav, hasSideNav }) => {\n  const [selectedTabIndex, setSelectedTabIndex] = useState(getSelectedTabIndex(location, pages));\n  const tabsRef = useRef(null);\n  const tabsContainerRef = useRef(null);\n  const selectedTabIndicatorRef = useRef(null);\n  // Don't animate the tab indicator by default\n  const [isAnimated, setIsAnimated] = useState(false);\n  const versionPopoverRef = useRef(null);\n  const profilePopoverRef = useRef(null);\n  const [openVersion, setOpenVersion] = useState(false);\n  const [openProfile, setOpenProfile] = useState(false);\n  const [openMenuIndex, setOpenMenuIndex] = useState(-1);\n  const [profile, setProfile] = useState(null);\n  const [isLoadingProfile, setIsLoadingProfile] = useState(true);\n\n  const POPOVER_ANIMATION_DELAY = 200;\n  const versionPopoverId = nextId();\n  const profilePopoverId = nextId();\n  const hasHome = home !== false;\n\n  const positionSelectedTabIndicator = (index) => {\n    const selectedTab = pages[index].tabRef;\n\n    if (selectedTab) {\n      tabsContainerRef.current.scrollLeft = selectedTab.current.offsetLeft;\n      positionIndicator(selectedTabIndicatorRef, selectedTab);\n    }\n  };\n\n  useEffect(() => {\n    const index = getSelectedTabIndex(location, pages);\n    setSelectedTabIndex(index);\n\n    animateIndicator(selectedTabIndicatorRef, isAnimated);\n    positionSelectedTabIndicator(index);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    (async () => {\n      if (ims && ims.isSignedInUser()) {\n        const profile = await ims.getProfile();\n        setProfile(profile);\n        setIsLoadingProfile(false);\n      } else if (!isLoadingIms) {\n        setIsLoadingProfile(false);\n      }\n    })();\n  }, [ims]);\n\n  useEffect(() => {\n    if (versionPopoverRef.current) {\n      if (openVersion) {\n        const { top, left } = versionPopoverRef.current.getBoundingClientRect();\n\n        versionPopoverRef.current.style.left = `calc(${left}px + var(--spectrum-global-dimension-size-160))`;\n        versionPopoverRef.current.style.top = `${top}px`;\n        versionPopoverRef.current.style.position = 'fixed';\n      } else {\n        // Wait for animation to finish\n        setTimeout(() => {\n          versionPopoverRef.current.style = '';\n        }, POPOVER_ANIMATION_DELAY);\n      }\n    }\n  }, [openVersion]);\n\n  useEffect(() => {\n    if (openMenuIndex !== -1) {\n      const menuRef = pages[openMenuIndex].menuRef;\n\n      const { top, left } = menuRef.current.getBoundingClientRect();\n\n      menuRef.current.style.left = `${left}px`;\n      menuRef.current.style.top = `${top}px`;\n      menuRef.current.style.position = 'fixed';\n    } else {\n      pages.forEach((page) => {\n        const menuRef = page.menuRef;\n        if (menuRef) {\n          // Wait for animation to finish\n          setTimeout(() => {\n            menuRef.current.style = '';\n          }, POPOVER_ANIMATION_DELAY);\n        }\n      });\n    }\n  }, [openMenuIndex]);\n\n  useEffect(() => {\n    // Clicking outside of menu should close menu\n    const onClick = (event) => {\n      if (versions?.length && !versionPopoverRef.current.contains(event.target)) {\n        setOpenVersion(false);\n      }\n\n      if (ims && !profilePopoverRef.current.contains(event.target)) {\n        setOpenProfile(false);\n      }\n\n      pages.some((page) => {\n        if (page.menuRef && !page.menuRef.current.contains(event.target)) {\n          setOpenMenuIndex(-1);\n        }\n      });\n    };\n\n    document.addEventListener('click', onClick);\n\n    return () => document.removeEventListener('click', onClick);\n  }, []);\n\n  useEffect(() => {\n    const onScroll = () => {\n      setOpenVersion(false);\n      setOpenMenuIndex(-1);\n    };\n\n    tabsContainerRef.current.addEventListener('scroll', onScroll, { passive: true });\n\n    return () => tabsContainerRef.current.removeEventListener('scroll', onScroll);\n  }, []);\n\n  return (\n    <header\n      role=\"banner\"\n      css={css`\n        height: 100%;\n        border-bottom: var(--spectrum-global-dimension-size-10) solid var(--spectrum-global-color-gray-200);\n        box-sizing: border-box;\n      `}>\n      <nav\n        css={css`\n          height: 100%;\n        `}\n        role=\"navigation\"\n        aria-label=\"Global\">\n        <div\n          css={css`\n            display: grid;\n            grid-template-areas: 'title navigation optional';\n            grid-template-columns: minmax(auto, min-content) auto minmax(auto, min-content);\n            align-items: center;\n            margin-left: var(--spectrum-global-dimension-size-400);\n            margin-right: var(--spectrum-global-dimension-size-400);\n            height: 100%;\n\n            @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n              grid-template-columns: minmax(auto, min-content) auto 0 0;\n              margin-right: 0;\n              margin-left: 0;\n              height: calc(100% + var(--spectrum-global-dimension-size-10));\n              overflow: hidden;\n            }\n          `}>\n          <div\n            css={css`\n              height: 100%;\n              grid-area: title;\n            `}>\n            <div\n              css={css`\n                display: flex;\n                height: 100%;\n                align-items: center;\n              `}>\n              <div\n                css={css`\n                  display: flex;\n                  align-items: center;\n                `}>\n                <div\n                  css={css`\n                    margin-right: var(--spectrum-global-dimension-size-50);\n                    display: none;\n\n                    @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                      display: block;\n                      visibility: ${hasSideNav ? 'visible' : 'hidden'};\n                    }\n                  `}>\n                  <ActionButton\n                    isQuiet\n                    onClick={() => {\n                      toggleSideNav && toggleSideNav();\n                    }}>\n                    <TripleGripper />\n                  </ActionButton>\n                </div>\n                <a\n                  href=\"/\"\n                  css={css`\n                    text-decoration: none;\n                  `}>\n                  <div\n                    css={css`\n                      display: flex;\n                      align-items: center;\n\n                      @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                        svg {\n                          margin-right: var(--spectrum-global-dimension-size-100);\n                        }\n\n                        strong {\n                          display: none;\n                        }\n                      }\n                    `}>\n                    <Adobe\n                      css={css`\n                        width: 22px;\n                        height: 18px;\n                        display: block;\n                        margin-right: var(--spectrum-global-dimension-size-100);\n                      `}\n                    />\n                    <strong\n                      className=\"spectrum-Heading spectrum-Heading--sizeXXS\"\n                      css={css`\n                        color: #fa0f00;\n                        font-size: 15px;\n                        font-weight: 700;\n                        white-space: nowrap;\n                      `}>\n                      Adobe Developers\n                    </strong>\n                  </div>\n                </a>\n              </div>\n\n              {hasHome && (\n                <div\n                  css={css`\n                    margin-left: var(--spectrum-global-dimension-size-300);\n                    height: calc(100% + var(--spectrum-global-dimension-size-10));\n                    border-left: 1px solid var(--spectrum-global-color-gray-200);\n                    border-right: 1px solid var(--spectrum-global-color-gray-200);\n\n                    @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                      display: none;\n                    }\n                  `}>\n                  <Link isQuiet variant=\"secondary\">\n                    <a\n                      css={css`\n                        display: flex;\n                        height: calc(100% - var(--spectrum-global-dimension-size-10));\n                        align-items: center;\n                        justify-content: center;\n                        box-sizing: border-box;\n                        padding: 0 var(--spectrum-global-dimension-size-300);\n                        white-space: nowrap;\n                        color: var(--spectrum-global-color-gray-700);\n\n                        &:hover {\n                          background-color: var(--spectrum-global-color-gray-75);\n                          color: var(--spectrum-global-color-gray-900);\n                          text-decoration: none;\n                        }\n                      `}\n                      href={home?.href || DEFAULT_HOME.path}\n                      {...getExternalLinkProps(home?.href || DEFAULT_HOME.path)}>\n                      {home?.title || DEFAULT_HOME.title}\n                    </a>\n                  </Link>\n                </div>\n              )}\n            </div>\n          </div>\n          <div\n            ref={tabsContainerRef}\n            css={css`\n              grid-area: navigation;\n              margin-left: ${hasHome\n                ? 'var(--spectrum-global-dimension-size-200)'\n                : 'var(--spectrum-global-dimension-size-300)'};\n\n              @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                overflow-x: auto;\n                overflow-x: overlay;\n                overflow-y: hidden;\n                margin-right: var(--spectrum-global-dimension-size-800);\n\n                .spectrum-Tabs {\n                  padding-bottom: var(--spectrum-global-dimension-size-400);\n                  margin-top: var(--spectrum-global-dimension-size-400);\n                }\n\n                .spectrum-Tabs-selectionIndicator {\n                  bottom: calc(\n                    var(--spectrum-global-dimension-size-400) - var(--spectrum-global-dimension-size-125)\n                  ) !important;\n                }\n              }\n            `}>\n            <Tabs\n              ref={tabsRef}\n              onFontsReady={() => {\n                positionSelectedTabIndicator(selectedTabIndex);\n                setIsAnimated(true);\n              }}>\n              {hasHome && (\n                <div\n                  css={css`\n                    display: none;\n                    margin-right: var(--spectrum-global-dimension-size-300);\n\n                    @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                      display: block;\n                    }\n                  `}>\n                  <TabsItem\n                    elementType={GatsbyLink}\n                    to={home?.href || DEFAULT_HOME.path}\n                    {...getExternalLinkProps(home?.href || DEFAULT_HOME.path)}>\n                    <TabsItemLabel>{home?.title || DEFAULT_HOME.title}</TabsItemLabel>\n                  </TabsItem>\n                </div>\n              )}\n              {pages.map((page, i) => {\n                const isSelectedTab = selectedTabIndex === i;\n                const menuPopoverId = nextId();\n\n                const setTabRef = (element) => {\n                  page.tabRef = { current: element };\n                };\n\n                const setTabMenuRef = (element) => {\n                  page.menuRef = { current: element };\n                };\n\n                return (\n                  <Fragment key={i}>\n                    {page.href ? (\n                      <TabsItem\n                        elementType={GatsbyLink}\n                        {...getExternalLinkProps(page.href)}\n                        ref={setTabRef}\n                        to={withPrefix(page.href)}\n                        selected={isSelectedTab}>\n                        <TabsItemLabel>{page.title}</TabsItemLabel>\n                      </TabsItem>\n                    ) : (\n                      <TabsItem\n                        css={css`\n                          ${openMenuIndex === i &&\n                          `\n                          &:after {\n                            content: '';\n                            position: absolute;\n                            z-index: -1;\n                            height: var(--spectrum-global-dimension-size-800);\n                            width: calc(100% + var(--spectrum-global-dimension-size-250));\n                            left: calc(-1 * var(--spectrum-global-dimension-size-125));\n                            top: calc(-1 * var(--spectrum-global-dimension-size-100));\n                            background-color: var(--spectrum-global-color-gray-100);\n                          }\n                        `}\n                        `}\n                        ref={setTabRef}\n                        selected={isSelectedTab}\n                        aria-controls={menuPopoverId}\n                        onClick={(event) => {\n                          event.stopImmediatePropagation();\n\n                          setOpenVersion(false);\n                          setOpenProfile(false);\n                          setOpenMenuIndex(openMenuIndex === i ? -1 : i);\n                        }}>\n                        <TabsItemLabel>{page.title}</TabsItemLabel>\n                        <ChevronDown\n                          css={css`\n                            width: var(--spectrum-global-dimension-size-125) !important;\n                            height: var(--spectrum-global-dimension-size-125) !important;\n                            margin-left: var(--spectrum-global-dimension-size-100);\n                            transition: transform var(--spectrum-global-animation-duration-100) ease-in-out;\n                            ${openMenuIndex === i && `transform: rotate(-90deg);`}\n                          `}\n                        />\n                        <Popover\n                          ref={setTabMenuRef}\n                          id={menuPopoverId}\n                          css={css`\n                            margin-left: calc(-1 * var(--spectrum-global-dimension-size-65));\n                            margin-top: var(--spectrum-global-dimension-size-25);\n                            border-top-left-radius: 0;\n                            border-top-right-radius: 0;\n                            ${page.menu.some((menu) => menu.description) &&\n                            `width: var(--spectrum-global-dimension-size-2400);`}\n                          `}\n                          isOpen={openMenuIndex === i}>\n                          <Menu>\n                            {page.menu.map((menu, k) => (\n                              <MenuItem key={k} href={withPrefix(menu.href)}>\n                                {menu.description ? (\n                                  <div\n                                    css={css`\n                                      margin: var(--spectrum-global-dimension-size-100) 0;\n                                    `}>\n                                    <div\n                                      css={css`\n                                        color: var(--spectrum-global-color-gray-900);\n                                      `}>\n                                      {menu.title}\n                                    </div>\n                                    <div\n                                      className=\"spectrum-Body spectrum-Body--sizeXS\"\n                                      css={css`\n                                        white-space: normal;\n                                        margin-top: var(--spectrum-global-dimension-size-50);\n                                      `}>\n                                      {menu.description}\n                                    </div>\n                                  </div>\n                                ) : (\n                                  <span>{menu.title}</span>\n                                )}\n                              </MenuItem>\n                            ))}\n                          </Menu>\n                        </Popover>\n                      </TabsItem>\n                    )}\n                    {i === 0 && versions?.length > 0 && (\n                      <div\n                        css={css`\n                          margin-left: var(--spectrum-global-dimension-size-100) !important;\n                          margin-right: var(--spectrum-global-dimension-size-300);\n                        `}>\n                        <PickerButton\n                          isQuiet\n                          isOpen={openVersion}\n                          aria-controls={versionPopoverId}\n                          onClick={(event) => {\n                            event.stopImmediatePropagation();\n\n                            setOpenMenuIndex(-1);\n                            setOpenProfile(false);\n                            setOpenVersion((open) => !open);\n                          }}>\n                          {versions.find(({ selected }) => selected)?.title}\n                        </PickerButton>\n                        <Popover\n                          ref={versionPopoverRef}\n                          id={versionPopoverId}\n                          variant=\"picker\"\n                          isQuiet\n                          isOpen={openVersion}>\n                          <Menu>\n                            {versions.map((version, k) => (\n                              <MenuItem\n                                key={k}\n                                isSelected={version.selected}\n                                isHighlighted={version.selected}\n                                onClick={() => {\n                                  setOpenVersion(false);\n                                }}\n                                href={version.href}>\n                                {version.title}\n                              </MenuItem>\n                            ))}\n                          </Menu>\n                        </Popover>\n                      </div>\n                    )}\n                  </Fragment>\n                );\n              })}\n              <TabsIndicator\n                ref={selectedTabIndicatorRef}\n                css={css`\n                  bottom: calc(-1 * var(--spectrum-global-dimension-size-125)) !important;\n                `}\n              />\n              {docs && (\n                <div\n                  css={css`\n                    margin-left: var(--spectrum-global-dimension-size-400);\n                    white-space: nowrap;\n                  `}>\n                  <AnchorButton variant=\"primary\" href={withPrefix(docs.href)}>\n                    {docs.title ?? 'View Docs'}\n                  </AnchorButton>\n                </div>\n              )}\n            </Tabs>\n          </div>\n          <div\n            css={css`\n              grid-area: optional;\n              justify-self: flex-end;\n            `}>\n            <div\n              css={css`\n                display: flex;\n              `}>\n              <AnchorButton\n                variant=\"primary\"\n                href=\"https://console.adobe.io\"\n                css={css`\n                  @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                    display: none;\n                  }\n                `}>\n                Console\n              </AnchorButton>\n\n              {process.env.GATSBY_IMS_SRC && process.env.GATSBY_IMS_CONFIG && (\n                <div\n                  css={css`\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    margin-left: var(--spectrum-global-dimension-size-200);\n                    width: var(--spectrum-global-dimension-size-800);\n                  `}>\n                  <ProgressCircle size=\"S\" hidden={!isLoadingIms} />\n\n                  <ActionButton\n                    css={css`\n                      margin-top: calc(-1 * var(--spectrum-global-dimension-size-25));\n                    `}\n                    hidden={isLoadingIms || isLoadingProfile || profile}\n                    variant=\"primary\"\n                    isQuiet\n                    onClick={() => {\n                      ims.signIn();\n                    }}>\n                    <ActionButtonLabel>Sign in</ActionButtonLabel>\n                  </ActionButton>\n\n                  <div hidden={!profile}>\n                    <button\n                      aria-label=\"Profile\"\n                      aria-controls={profilePopoverId}\n                      onClick={(event) => {\n                        event.stopImmediatePropagation();\n\n                        setOpenVersion(false);\n                        setOpenMenuIndex(-1);\n                        setOpenProfile((open) => !open);\n                      }}\n                      css={css`\n                        display: block;\n                        padding: 0;\n                        border: none;\n                        width: var(--spectrum-global-dimension-size-400);\n                        height: var(--spectrum-global-dimension-size-400);\n                        border-radius: var(--spectrum-global-dimension-static-percent-50);\n                        background: var(--spectrum-global-color-gray-50);\n                        overflow: hidden;\n                        cursor: pointer;\n                      `}>\n                      <Image alt=\"Avatar\" src={profile ? ims.avatarUrl(profile.userId) : ''} />\n                    </button>\n                    <Popover\n                      id={profilePopoverId}\n                      ref={profilePopoverRef}\n                      isOpen={openProfile}\n                      css={css`\n                        width: var(--spectrum-global-dimension-size-3400);\n                        max-height: var(--spectrum-global-dimension-size-4600);\n                        margin-left: calc(-1 * var(--spectrum-global-dimension-size-3000));\n                      `}>\n                      <div\n                        css={css`\n                          display: flex;\n                          align-items: center;\n                          justify-content: center;\n                          flex-direction: column;\n                        `}>\n                        <div\n                          css={css`\n                            width: var(--spectrum-global-dimension-size-800);\n                            height: var(--spectrum-global-dimension-size-800);\n                            border-radius: var(--spectrum-global-dimension-static-percent-50);\n                            background: var(--spectrum-global-color-gray-50);\n                            overflow: hidden;\n                            margin-top: var(--spectrum-global-dimension-size-400);\n                            margin-bottom: var(--spectrum-global-dimension-size-200);\n                          `}>\n                          <Image alt=\"Avatar\" src={profile ? ims.avatarUrl(profile.userId) : ''} />\n                        </div>\n\n                        <div\n                          className=\"spectrum-Heading spectrum-Heading--sizeL spectrum-Heading--light\"\n                          css={css`\n                            padding: 0 var(--spectrum-global-dimension-size-200);\n                            text-align: center;\n                          `}>\n                          {profile && profile.displayName}\n                        </div>\n\n                        <div\n                          css={css`\n                            margin: var(--spectrum-global-dimension-size-200) 0;\n                            padding: 0 var(--spectrum-global-dimension-size-200);\n                            box-sizing: border-box;\n                            width: 100%;\n                          `}>\n                          <Divider size=\"S\" />\n                        </div>\n\n                        <AnchorButton href=\"https://account.adobe.com/\" variant=\"primary\" isQuiet>\n                          Edit Profile\n                        </AnchorButton>\n\n                        <Button\n                          variant=\"primary\"\n                          css={css`\n                            margin: var(--spectrum-global-dimension-size-200) 0;\n                          `}\n                          onClick={() => {\n                            ims.signOut();\n                          }}>\n                          Sign out\n                        </Button>\n                      </div>\n                    </Popover>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nGlobalHeader.propTypes = {\n  ims: PropTypes.object,\n  isLoadingIms: PropTypes.bool,\n  home: PropTypes.object,\n  versions: PropTypes.array,\n  pages: PropTypes.array,\n  docs: PropTypes.object,\n  location: PropTypes.object,\n  toggleSideNav: PropTypes.func,\n  hasSideNav: PropTypes.bool\n};\n\nexport { GlobalHeader };\n"],"sourceRoot":""}